{"version":3,"sources":["reducers/gameReducer.js","components/setupGame/SetUpNewGame.js","components/game/Game.js","components/NopsaGame.js","reducers/rootReducer.js","App.js","index.js"],"names":["initialState","isOn","gameReducer","state","action","type","data","mapDispatchToProps","setGameSettings","settings","getStyles","connect","game","props","screenWidth","Dimensions","get","width","screenHeight","height","StyleSheet","create","screen","alignItems","backgroundColor","ConnectedGame","View","Text","NopsaGame","rootReducer","combineReducers","store","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"mOAAMA,EAAe,CAAEC,MAAM,GAqBdC,EAnBK,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAElD,OAAQA,EAAOC,MACf,IAAK,oBACD,OAAOD,EAAOE,KAClB,QACI,OAAOH,ICmCTI,EAAqB,CACvBC,gBD/B2B,SAACC,GAC5B,MAAO,CACHJ,KAAM,oBACNC,KAAMG,KCqCRC,GANwBC,aAVN,SAAAR,GACpB,MAAO,CACHS,KAAMT,EAAMS,QAQmCL,EAAzBI,EAxCT,SAACE,GAElB,IAAMC,EAAcC,IAAWC,IAAI,UAAUC,MACvCC,EAAeH,IAAWC,IAAI,UAAUG,OAO/BT,EAAUI,EAAaI,MAoCxB,SAACJ,EAAaI,GAC5B,OAAOE,IAAWC,OAAO,CACrBC,OAAQ,CACJC,WAAY,SACZN,MAAOH,EACPK,OAAQD,EACRM,gBAAiB,aC/BdC,EAHOd,aAVE,SAAAR,GACpB,MAAO,CACHS,KAAMT,EAAMS,QAIO,GAILD,EAnBT,SAACE,GAEV,OACI,kBAACa,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,iBCOGC,EAVG,SAACf,GACf,OACI,kBAACa,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,qBCHGE,EAJKC,YAAgB,CAChClB,KAAMV,ICMJ6B,EAAQC,YAAYH,GAcXI,EAZH,WACR,OACI,kBAAC,IAAD,CAAUF,MAAOA,GACb,kBAACL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,wBACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCKhBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b601a6be.chunk.js","sourcesContent":["const initialState = { isOn: false }\n\nconst gameReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n    case 'SET_GAME_SETTINGS':\n        return action.data\n    default:\n        return state\n    }\n\n}\n\nexport const setGameSettings = (settings) => {\n    return {\n        type: 'SET_GAME_SETTINGS',\n        data: settings,\n    }\n}\n\n\nexport default gameReducer\n\n","import React from 'react'\nimport { View, Dimensions,  StyleSheet, Text } from 'react-native'\nimport { connect } from 'react-redux'\nimport { setGameSettings } from '../../reducers/gameReducer'\n\n\n\nconst SetUpNewGame = (props) => {\n\n    const screenWidth = Dimensions.get('window').width\n    const screenHeight = Dimensions.get('window').height\n    // const cardWidthIfScreenWidthIsUsed = screenWidth / 6\n    // const cardWidthIfScreenHeightIsUsed = screenHeight / ((0.5 + 1 + 0.75 + 1 + 0.75 + 1.5 + 0.5) * 1.7)\n    // const cardWidth = Math.min(cardWidthIfScreenWidthIsUsed, cardWidthIfScreenHeightIsUsed)\n    // const cardHeight = 1.7 * cardWidth\n    // const spacing = (screenWidth - 6 * cardWidth) / 2\n\n    const styles = getStyles(screenWidth, screenHeight)\n\n\n    return (\n        // <View style={styles.titleView}>\n        //     <Text style={styles.titleText}>nopsa</Text>\n        //     <Text style={styles.infoText}>a card game for those with skill, speed and luck</Text>\n        // </View>\n        <View style={styles.screen}>\n            <Text>huhuuu</Text>\n            <Text>++++++++++++</Text>\n            <Text>----------</Text>\n            <Text>........</Text>\n            <Text>ööööööö</Text>\n            <Text>====ppppppppppppppppppp=</Text>\n            <Text>wwwwww</Text>\n        </View>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        game: state.game,\n    }\n}\n\nconst mapDispatchToProps = {\n    setGameSettings,\n}\n\nconst ConnectedSetUpNewGame = connect(mapStateToProps, mapDispatchToProps)(SetUpNewGame)\n\nexport default ConnectedSetUpNewGame\n\n\n\nconst getStyles = (screenWidth, screenHeight) => {\n    return StyleSheet.create({\n        screen: {\n            alignItems: 'center',\n            width: screenWidth,\n            height: screenHeight,\n            backgroundColor: 'green',\n        },\n        // titleView: {\n        //     height: screenWidth / 10,\n        //     alignItems: 'center',\n        // },\n        // titleText: {\n        //     fontSize: screenWidth / 10,\n        //     fontWeigth: 'bold',\n        //     color: '#B9CC3F',\n        //     fontFamily: 'Arial Black',\n        // },\n        // infoText: {\n        //     fontSize: screenWidth / 20,\n        //     color: '#B9CC3F',\n        //     fontFamily: 'Arial',\n        // },\n    })\n}\n\n\n\n","import React from 'react'\nimport { View, Text } from 'react-native'\nimport { connect } from 'react-redux'\n\n\n\nconst Game = (props) => {\n\n    return (\n        <View>\n            <Text>game</Text>\n        </View>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        game: state.game,\n    }\n}\n\nconst mapDispatchToProps = {\n\n}\n\nconst ConnectedGame = connect(mapStateToProps, mapDispatchToProps)(Game)\n\n\nexport default ConnectedGame","import React from 'react'\nimport { View, Text } from 'react-native'\nimport { connect } from 'react-redux'\nimport SetUpNewGame from './setupGame/SetUpNewGame'\nimport Game from './game/Game'\n\n\nconst NopsaGame = (props) => {\n    return (\n        <View>\n            <Text>nopsa game</Text>\n        </View>\n    )\n}\n\n\n\nexport default NopsaGame\n\n// import React from 'react'\n// import { View, Text } from 'react-native'\n// import { connect } from 'react-redux'\n// import SetUpNewGame from './setupGame/SetUpNewGame'\n// import Game from './game/Game'\n\n\n// const NopsaGame = (props) => {\n//     return (\n//         <View>\n//             {!props.game.gameIsOn ?\n//                 <SetUpNewGame/>\n//                 :\n//                 <Game/>\n//             }\n//         </View>\n//     )\n// }\n\n// const mapStateToProps = state => {\n//     return {\n//         game: state.game,\n//     }\n// }\n\n// const mapDispatchToProps = {\n// }\n\n// const ConnectedNopsaGame = connect(mapStateToProps, mapDispatchToProps)(NopsaGame)\n\n// export default ConnectedNopsaGame\n\n\n\n\n","import { combineReducers } from 'redux'\nimport gameReducer from './gameReducer'\n\nconst rootReducer = combineReducers({\n    game: gameReducer,\n})\n\nexport default rootReducer\n\n\n","\nimport React from 'react'\nimport { View, Dimensions,  StyleSheet, Text } from 'react-native'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport NopsaGame from './components/NopsaGame'\nimport rootReducer from './reducers/rootReducer'\nimport Game from './components/game/Game'\n\n\nconst store = createStore(rootReducer)\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <View>\n                <Text>popopopopopopop</Text>\n                <Game></Game>\n                <NopsaGame></NopsaGame>\n            </View>\n        </Provider>\n    )\n}\n\nexport default App\n\n\n// const App = () => {\n//     return (\n//         <View>\n//             <Text>++++++++++++</Text>\n//             <Text>----------</Text>\n//             <Text>........</Text>\n//             <Text>ööööööö</Text>\n//             <Text>====ppppppppppppppppppp=</Text>\n//             <Text>wwwwww</Text>\n//         </View>\n//     )\n// }\n\n// export default App\n\n\n\n// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           xxxxxxxxxx   Edit <code>src/App.js</code> and save to reload.\n//         </p>\n        \n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}